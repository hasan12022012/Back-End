@model ProductVM

@{
    List<Rating> ratings = ViewBag.Ratings;
}

@foreach (var product in Model.Products)
{
    <li style="width:205px; margin-top:20px; padding:0;" class="card col-3" data-id="@product.ProductGenres.FirstOrDefault()?.GenreId">
        <div class="card_image">
            <a asp-action="Detail" asp-route-id="@product.Id">
                <img width="100%" src="~/assets/img/@product.ProductImages.FirstOrDefault(m => m.IsMain).Name" alt="">
            </a>
        </div>
        <div class="card_content">
            <a asp-action="Detail" asp-route-id="@product.Id">@product.Name</a>
            <p>@product.Author.Name</p>
            <div class="card_text">
                @{
                    int totalRatings = ratings.Count(r => r.Comment.ProductId == product.Id && r.Comment.Product.Rating.HasValue);
                    double averageRating = totalRatings > 0 ? (double)ratings.Where(r => r.Comment.ProductId == product.Id && r.Comment.Product.Rating.HasValue).Sum(r => r.Comment.Product.Rating.Value) / totalRatings : 0;
                    int roundedRating = (int)Math.Round(averageRating, MidpointRounding.AwayFromZero);
                    bool hasRating = totalRatings > 0;
                }
                <div class="starsreview">
                    @for (int i = 1; i <= 5; i++)
                    {
                        @if (hasRating && i <= roundedRating)
                        {
                            <i class="fa-solid fa-star" style="color:#FEC006"></i>
                        }
                        else
                        {
                            <i class="fa-solid fa-star" style="color:darkgrey"></i>
                        }
                    }
                </div>
                <div class="price">
                    <span>$@product.Price</span>
                </div>
            </div>
        </div>
    </li>
}